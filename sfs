#!/bin/bash
# sfs - s.earch f.ile s.ize and create a pastebin of the results
# InterGen - 5/3/15

clear
echo
echo
echo -n "In MB, what size of files are we looking for? [Default = 100]: "

read TARGETSIZE

RE='^[0-9]+$'

if [ -z "$TARGETSIZE" ]; then
    SIZE=100
else
    if ! [[ $TARGETSIZE =~ $RE ]]; then
        echo
        echo "Hey Sparky, \"$TARGETSIZE\" isn't a number in MB-- let's run it again, shall we?"
        echo
        echo
        echo
        exit 1
    else
        SIZE=$TARGETSIZE
    fi
fi

function separator {
    echo "-----------------------------------------------------------------------------------"
}

function countfiles {
    if [ "$FILESEARCH" = YES ]; then
        totalfilecount="$(echo $(($(du -ah $TARGET 2>/dev/null | wc -l)-1)))"
        echo
        echo "Total number of files in $TARGET: $totalfilecount"
        echo
    else
        echo
        echo
        echo
    fi
}

searchsize="$(( $SIZE * 1000 ))"
stamp="$(echo $(date +"%T_%m-%d-%Y"))"

# Grabbing user directories- to be used later.
# USR="$(cat /etc/userdomains | awk '{print $2}' | grep -v nobody | uniq)"

echo
echo "Got it."
echo
echo "Enter target path we're going to search recursively for files >= "$SIZE"M,"
echo "or enter a number from the following options:"
echo
echo "1) User Directories"
echo "2) /var/log Directory"
echo "3) cPanel Logs Directory"
echo "4) MySQL Directory"
echo
echo "[NoEntry] = /"
echo
echo -n "Selection- ?:"

read CHOICE;

echo
echo
echo -n "While we're looking, should we find the total number of files -including subdirectories- in that path (y/N)? "

read FILECOUNTER;

if [ -z "$FILECOUNTER" ]; then
    FILESEARCH=NO
    echo
    echo
    echo "Filecounter option skipped"                                         
    echo
    echo
else 
    if [[ $FILECOUNTER =~ $RE ]]; then
        echo
        echo
        echo "Since when does (y/N)? mean 'enter a number'?... Let's run it again Sparky..."
        echo
        separator
        echo
        echo
        exit 1
    else
        if [[ $FILECOUNTER =~ y ]]; then
            FILESEARCH=YES
            echo
            echo
            echo "Filecounter enabled"
            echo
            echo
        else
            if [[ $FILECOUNTER =~ Y ]]; then
                FILESEARCH=YES
                echo
                echo
                echo "Filecounter enabled"
                echo
                echo
            else
                FILESEARCH=NO
                echo
                echo
                echo "Filecounter option skipped"
                echo
                echo
            fi
        fi
    fi
fi

function SEARCH {
    echo
    echo
    echo "Server: $HOSTNAME $stamp"
    separator
    echo "Searching recursively in $TARGET for files >= "$SIZE"M "
    separator
    echo
    find $TARGET -type f -size +"$searchsize"k -exec ls -lh {} \; 2>/dev/null| awk '{ printf "%- 130s %s\n", $9,$5; }'
    echo
    echo
    echo
    echo "Total Size of $TARGET: $DIRSIZE"
    countfiles
    echo
    echo
    echo "Search complete"
    separator
    echo
    echo
    echo
    echo
}

function STOP {
    echo
    echo
    echo
    echo
    echo "Hey Sparky, \"$CHOICE\" isn't a valid path on this server."
    echo
    sleep 1
    echo "Double check the path you're trying to search, and let's run it again- shall we?"
    echo
    echo
    separator
    echo
    echo
    exit 1
}

function PASTE ()
{
    PASTEFILE=$@;
    curl -d name=sfs --data-urlencode text@$PASTEFILE http://nobits.ml/api/create > TEMPASTE
    sed -i 's/view/view\/raw/g' TEMPASTE
    echo
    echo
    echo "Your results are at $(cat TEMPASTE)"
    echo
    echo "Your paste will expire in 30 days"
    rm -rf TEMPASTE
}

if [ -z "$CHOICE" ]; then
TARGET=/
DIRSIZE="$(du -h $TARGET 2>/dev/null | tail -1 | awk '{print $1}')"
mkdir -p /root/support
SEARCH 2>&1 | tee /root/support/"$SIZE"M_File_Search_Results-"$stamp"
PASTE /root/support/"$SIZE"M_File_*
rm -rf /root/support/"$SIZE"M_File_*
echo
echo
echo

else

   if ! [[ $CHOICE =~ $RE ]]; then 
   TARGET=$CHOICE
      if [ ! -d "$TARGET" ]; then
          STOP
      else
          DIRSIZE="$(du -h $TARGET 2>/dev/null | tail -1 | awk '{print $1}')"
          mkdir -p /root/support
          SEARCH 2>&1 | tee /root/support/"$SIZE"M_File_Search_Results-"$stamp"
          PASTE /root/support/"$SIZE"M_File_*
          rm -rf /root/support/"$SIZE"M_File_*
          echo
          echo
          echo
      fi
   else
      case $CHOICE in
          1) TARGET=/home;;
          2) TARGET=/var/log;;
          3) TARGET=/usr/local/cpanel/logs;;
          4) TARGET=/var/lib/mysql;;
      esac
      if [ ! -d "$TARGET" ]; then
          STOP
      else
          DIRSIZE="$(du -h $TARGET 2>/dev/null | tail -1 | awk '{print $1}')"
          mkdir -p /root/support
          SEARCH 2>&1 | tee /root/support/"$SIZE"M_File_Search_Results-"$stamp"
          PASTE /root/support/"$SIZE"M_File_*
          rm -rf /root/support/"$SIZE"M_File_*
          echo
          echo
          echo
      fi
   fi
fi
exit 0
